import { HMSGenericTypes, HMSPeer, IHMSStore } from '../../core';
import { IHMSActions } from '../../core/IHMSActions';
/**
 * Log data of audio level and speaker speaking periodically to beam for transcript
 * diarization.
 */
export declare class BeamSpeakerLabelsLogger<T extends HMSGenericTypes> {
    private audioContext?;
    private readonly intervalMs;
    private shouldMonitor;
    private hasStarted;
    private unsubs;
    private readonly analysers;
    private readonly store;
    private actions;
    constructor(store: IHMSStore<T>, actions: IHMSActions<T>);
    start(): Promise<void>;
    stop(): Promise<void>;
    monitorAudioLevels(): Promise<void>;
    logAllPeersAudioLevels(): Promise<void>;
    getAudioLevel(peer: HMSPeer, stream: MediaStream): Promise<{
        peerId: string;
        peerName: string;
        level: number;
    }>;
    createAnalyserNode(stream: MediaStream): AnalyserNode;
    calculateAudioLevel(analyserNode: AnalyserNode): number;
}
