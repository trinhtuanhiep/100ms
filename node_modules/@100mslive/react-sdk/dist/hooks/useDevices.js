import{__awaiter as e}from"../node_modules/tslib/tslib.es6.mjs.js";import{useCallback as i}from"react";import{selectDevices as t,selectLocalMediaSettings as o,selectIsInPreview as d,DeviceType as u,selectIsAllowedToPreviewMedia as s,selectIsAllowedToPublish as p}from"@100mslive/hms-video-store";import{useHMSActions as v,useHMSStore as c}from"../primitives/HmsRoomProvider.js";import{logErrorHandler as a}from"../utils/commons.js";const r=(r=a)=>{const m=v(),n=c(t),I=c(o),l=c(d),D=c(l?s:p),f={[u.audioOutput]:I.audioOutputDeviceId},O={[u.audioOutput]:n.audioOutput};D.video&&(O[u.videoInput]=n.videoInput,f[u.videoInput]=I.videoInputDeviceId),D.audio&&(O[u.audioInput]=n.audioInput,f[u.audioInput]=I.audioInputDeviceId);return{allDevices:O,selectedDeviceIDs:f,updateDevice:i((({deviceType:i,deviceId:t})=>e(void 0,void 0,void 0,(function*(){try{switch(i){case u.audioInput:yield m.setAudioSettings({deviceId:t});break;case u.videoInput:yield m.setVideoSettings({deviceId:t});break;case u.audioOutput:yield m.setAudioOutputDevice(t)}}catch(e){r(e,"updateDevices")}}))),[r,m])}};export{r as useDevices};
//# sourceMappingURL=useDevices.js.map
