/// <reference types="react" />
export interface useEmbedShareResult {
    /**
     * Embed and start sharing a URL.
     *
     * It will throw an error in the following scenarios:
     * - When the URL has not been passed
     * - When the reference has not been attached to an iframe
     * - When screen share cannot be started
     */
    startEmbedShare: (value: string) => Promise<void>;
    /**
     * Stop sharing the embed.
     */
    stopEmbedShare: () => Promise<void>;
    /**
     * Flag to check if an embed is currently being shared.
     */
    isEmbedShareInProgress: boolean;
    /**
     * Reference to attach to the iframe that is responsible for rendering the URL passed.
     */
    iframeRef: React.RefObject<HTMLIFrameElement | null>;
}
/**
 * @param resetConfig Callback that implements cleanup after Embed sharing stops. It is an optional parameter.
 * @returns useEmbedShareResult
 */
export declare const useEmbedShare: (resetConfig?: () => void) => useEmbedShareResult;
