import{__awaiter as e}from"../node_modules/tslib/tslib.es6.mjs.js";import{useEffect as s,useCallback as o}from"react";import{HMSNotificationTypes as r}from"@100mslive/hms-video-store";import{useHMSActions as t,useHMSVanillaNotifications as i}from"../primitives/HmsRoomProvider.js";import{logErrorHandler as n}from"../utils/commons.js";const m=({type:m,json:d=!0,onEvent:a,handleError:l=n})=>{const c=t(),p=i();s((()=>{c.ignoreMessageTypes([m])}),[c,m]),s((()=>{if(!p)return;return p.onNotification((e=>{const s=e.data;if(s&&s.type===m)try{const e=d?JSON.parse(s.message):s.message;null==a||a(e)}catch(e){l(e,"handleCustomEvent")}}),r.NEW_MESSAGE)}),[p,m,d,a,l]);return{sendEvent:o(((s,o)=>e(void 0,void 0,void 0,(function*(){try{const e=((e,s)=>s?JSON.stringify(e||""):e)(s,d);o&&Array.isArray(null==o?void 0:o.roleNames)?yield c.sendGroupMessage(e,o.roleNames,m):"string"==typeof(null==o?void 0:o.peerId)?yield c.sendDirectMessage(e,o.peerId,m):yield c.sendBroadcastMessage(e,m),null==a||a(s)}catch(e){l(e,"sendCustomEvent")}}))),[c,l,a,m,d])}};export{m as useCustomEvent};
//# sourceMappingURL=useCustomEvent.js.map
