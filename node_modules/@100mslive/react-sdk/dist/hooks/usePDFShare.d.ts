/// <reference types="react" />
export interface usePDFShareResult {
    /**
     * Start sharing a PDF file or URL.
     * It will throw an error in the following scenarios:
     * - When file or URL has not been passed, or is invalid
     * - When the reference has not been attached to an iframe
     * - When screen share cannot be started
     */
    startPDFShare: (value: File | string) => Promise<void>;
    /**
     * Stop sharing the PDF file or URL.
     */
    stopPDFShare: () => Promise<void>;
    /**
     * Flag to check if PDF sharing is currently in progress.
     */
    isPDFShareInProgress: boolean;
    /**
     * Reference to attach to the iframe that is responsible for rendering the PDF.
     */
    iframeRef: React.RefObject<HTMLIFrameElement | null>;
}
/**
 * @param resetConfig  Callback that implements cleanup after PDF sharing stops. Typically used to reset the currently selected PDF file or URL in your state. It is an optional parameter.
 * @returns usePDFShareResult
 */
export declare const usePDFShare: (resetConfig?: () => void) => usePDFShareResult;
