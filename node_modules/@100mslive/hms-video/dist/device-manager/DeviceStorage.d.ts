import { DeviceMap, SelectedDevices } from '../interfaces';
declare type DeviceInfo = {
    deviceId?: string;
    groupId?: string;
};
/**
 * This class is to manage storing and retrieving selected devices
 * from localstorage
 * @internal
 */
declare class DeviceStorage {
    private storage;
    private remember;
    private devices?;
    private readonly TAG;
    setDevices(devices: DeviceMap): void;
    rememberDevices(value: boolean): void;
    /**
     * This will update the passed in type value in storage
     * @param {string} type - One of audioInput | videoInput | audioOutput
     * @param {DeviceInfo} param
     * @returns {void}
     */
    updateSelection(type: 'audioInput' | 'videoInput' | 'audioOutput', { deviceId, groupId }: DeviceInfo): void;
    getSelection(): SelectedDevices | undefined;
    cleanup(): void;
    private isSame;
}
export declare const DeviceStorageManager: DeviceStorage;
export {};
