import { HMSChangeMultiTrackStateRequest, HMSChangeTrackStateRequest } from './change-track-state';
import { DeviceChangeListener } from './devices';
import { HMSLeaveRoomRequest } from './leave-room-request';
import { HMSMessage } from './message';
import { HMSConnectionQuality } from './peer';
import { HMSRoleChangeRequest } from './role-change-request';
import { HMSRoom } from './room';
import { HMSPoll, SessionStoreUpdate } from './session-store';
import { HMSSpeaker } from './speaker';
import { HMSException } from '../error/HMSException';
import { HMSTrack } from '../media/tracks/HMSTrack';
import { HMSPeer } from '../sdk/models/peer';
export declare enum HMSRoomUpdate {
    RECORDING_STATE_UPDATED = "RECORDING_STATE_UPDATED",
    BROWSER_RECORDING_STATE_UPDATED = "BROWSER_RECORDING_STATE_UPDATED",
    SERVER_RECORDING_STATE_UPDATED = "SERVER_RECORDING_STATE_UPDATED",
    RTMP_STREAMING_STATE_UPDATED = "RTMP_STREAMING_STATE_UPDATED",
    HLS_STREAMING_STATE_UPDATED = "HLS_STREAMING_STATE_UPDATED",
    ROOM_PEER_COUNT_UPDATED = "ROOM_PEER_COUNT_UPDATED"
}
export declare enum HMSPeerUpdate {
    PEER_JOINED = 0,
    PEER_LEFT = 1,
    AUDIO_TOGGLED = 2,
    VIDEO_TOGGLED = 3,
    BECAME_DOMINANT_SPEAKER = 4,
    RESIGNED_DOMINANT_SPEAKER = 5,
    STARTED_SPEAKING = 6,
    STOPPED_SPEAKING = 7,
    ROLE_UPDATED = 8,
    PEER_LIST = 9,
    NAME_UPDATED = 10,
    METADATA_UPDATED = 11,
    HAND_RAISE_CHANGED = 12,
    PEER_REMOVED = 13,
    PEER_ADDED = 14
}
export declare enum HMSTrackUpdate {
    TRACK_ADDED = 0,
    TRACK_REMOVED = 1,
    TRACK_MUTED = 2,
    TRACK_UNMUTED = 3,
    TRACK_DESCRIPTION_CHANGED = 4,
    TRACK_DEGRADED = 5,
    TRACK_RESTORED = 6
}
export declare enum HMSPollsUpdate {
    POLL_CREATED = 0,
    POLL_STARTED = 1,
    POLL_STOPPED = 2,
    POLL_STATS_UPDATED = 3
}
export interface HMSAudioListener {
    onAudioLevelUpdate(speakers: HMSSpeaker[]): void;
}
export interface HMSConnectionQualityListener {
    onConnectionQualityUpdate(qualityUpdates: HMSConnectionQuality[]): void;
}
export interface SessionStoreListener {
    onSessionStoreUpdate(values: SessionStoreUpdate[]): void;
}
export interface PollsListener {
    onPollsUpdate(type: HMSPollsUpdate, polls: HMSPoll[]): void;
}
export interface HMSUpdateListener extends DeviceChangeListener, SessionStoreListener, PollsListener {
    onJoin(room: HMSRoom): void;
    onRoomUpdate(type: HMSRoomUpdate, room: HMSRoom): void;
    onPeerUpdate(type: HMSPeerUpdate, peer: HMSPeer | HMSPeer[] | null): void;
    onTrackUpdate(type: HMSTrackUpdate, track: HMSTrack, peer: HMSPeer): void;
    onMessageReceived(message: HMSMessage): void;
    onError(error: HMSException): void;
    onReconnecting(error: HMSException): void;
    onReconnected(): void;
    onRoleChangeRequest(request: HMSRoleChangeRequest): void;
    onRoleUpdate(newRole: string): void;
    onChangeTrackStateRequest(request: HMSChangeTrackStateRequest): void;
    onChangeMultiTrackStateRequest(request: HMSChangeMultiTrackStateRequest): void;
    onRemovedFromRoom(request: HMSLeaveRoomRequest): void;
    onNetworkQuality?(score: number): void;
    onPreview(room: HMSRoom, localTracks: HMSTrack[]): void;
}
